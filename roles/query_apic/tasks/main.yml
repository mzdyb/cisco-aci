---
- name: Ensure the directory to store ACI configuration exists
  ansible.builtin.file:
    path: /tmp/aci_data/
    state: directory
  delegate_to: "{{ ansible_controller }}"

- name: Query Tenants
  cisco.aci.aci_tenant:
    state: query
  register: tenant_data
  tags: [tenants, all]

- name: Extract Tenants data
  ansible.builtin.set_fact:
    tenants: >-
      {{ tenant_data.current |
         json_query('[].{
            name: fvTenant.attributes.name,
            description: fvTenant.attributes.descr
            }'
         )
      }}
  tags: [tenants, all]

- name: Write Tenants data to YAML file
  ansible.builtin.copy:
    content: "{{ tenants | to_nice_yaml }}"
    dest: "/tmp/aci_data/tenants.yml"
  delegate_to: "{{ ansible_controller }}"
  tags: [tenants, all]

- name: Query VRFs
  cisco.aci.aci_vrf:
    state: query
  register: vrf_data
  tags: [vrfs, all]

- name: Extract VRFs data
  ansible.builtin.set_fact:
    vrfs: >-
      {{ vrf_data.current |
         json_query("[?contains(fvCtx.attributes.dn,'production')].{
            object_path: fvCtx.attributes.dn,
            name: fvCtx.attributes.name,
            description: fvCtx.attributes.descr,
            policy_direction: fvCtx.attributes.pcEnfDir,
            policy_enforcement: fvCtx.attributes.pcEnfPref
            }"
         )
      }}
  tags: [vrfs, all]

- name: Write VRFs data to YAML file
  ansible.builtin.copy:
    content: "{{ vrfs | to_nice_yaml }}"
    dest: "/tmp/aci_data/vrfs.yml"
  delegate_to: "{{ ansible_controller }}"
  tags: [vrfs, all]

- name: Query Bridge Domain
  cisco.aci.aci_bd:
    state: query
  register: bd_data
  tags: [bds, all]

- name: Extract Bridge Domain data
  ansible.builtin.set_fact:
    bds: >-
      {{ bd_data.current |
         json_query('[?contains(fvCtx.attributes.dn,'production')].{
            object_path: fvBD.attributes.dn,
            name: fvBD.attributes.name,
            description: fvBD.attributes.descr
            }'
         )
      }}
  tags: [bds, all]

- name: Write Bridge Domains data to YAML file
  ansible.builtin.copy:
    content: "{{ bds | to_nice_yaml }}"
    dest: "/tmp/aci_data/bds.yml"
  delegate_to: "{{ ansible_controller }}"
  tags: [bds, all]

- name: Query Subnets
  cisco.aci.aci_bd_subnet:
    state: query
  register: subnets_data
  tags: [subnets, all]

- name: Extract Subnets data
  ansible.builtin.set_fact:
    subnets: >-
      {{ subnets_data.current |
         json_query('[?contains(fvCtx.attributes.dn,'production')].{
            object_path: fvSubnet.attributes.dn,
            name: fvSubnet.attributes.name,
            description: fvSubnet.attributes.descr,
            gateway: fvSubnet.attributes.ip,
            scope: fvSubnet.attributes.scope
            }'
         )
       }}
  tags: [subnets, all]

- name: Write Subnets data to YAML file
  ansible.builtin.copy:
    content: "{{ subnets | to_nice_yaml }}"
    dest: "/tmp/aci_data/subnets.yml"
  delegate_to: "{{ ansible_controller }}"
  tags: [subnets, all]
